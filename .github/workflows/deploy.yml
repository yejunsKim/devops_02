name: Deploy with DockerHub to Ubuntu Server

on:
  push:
    #브런치 => main에서 Commit 
    branches:
      - main
# Commit시에 작업 
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 현재 repository 안에서 체크 아웃 설정 
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          # Java JDK17 설치 및 환경변수 => 17버전으로 빌드하기 위한 설정 

        # gradlew => 우분투에서 실행 권한이 없는 경우 => 실행 권한 추가 
        # +r(읽기) +w(쓰기) +x(실행) 
      - name: Set gradlew permissions
        run: chmod +x ./gradlew
       
      - name: Build with Gradle
        run: ./gradlew clean build
        # .jar파일 생성 => clean은 전체 삭제 => 다시 build
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
        # docker 로그인 

        # docker build : image를 생성 => dockerhub에 전송  
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest
      # SSH => 개인키를 가지고 AWS에 접속 
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
      # 등록 => 서버키가 등록 
      - name: Add known hosts
        run: ssh-keyscan -t ed25519 3.37.130.74 >> ~/.ssh/known_hosts
      # 실행 
      # container명 => 같으면 안된다 
      # 1. 정지 docker stop image명
      # 2. 삭제 docker rm image명
      # 3. dockerhub에서 읽기 pull 
      # 4. 실행명령 : run 
      - name: Deploy on server using DockerHub image
        run: |
          ssh ubuntu@3.37.130.74 << 'EOF'
            docker stop spring-app || true
            docker rm spring-app || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest
            docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest
          EOF
